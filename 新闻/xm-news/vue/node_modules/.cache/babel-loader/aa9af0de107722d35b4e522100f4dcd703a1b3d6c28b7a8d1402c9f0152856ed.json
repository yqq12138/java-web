{"ast":null,"code":"const lineOption = {\n  title: {\n    text: '答题数量的趋势图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    left: 'left'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    data: [],\n    type: 'line',\n    smooth: true\n  }]\n};\nconst pieOption = {\n  title: {\n    text: '订单销售统计',\n    subtext: '比例图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [{\n    type: 'pie',\n    center: ['50%', '60%'],\n    radius: '50%',\n    data: [],\n    label: {\n      show: true,\n      formatter(param) {\n        return param.name + ' (' + param.percent + '%)';\n      }\n    },\n    emphasis: {\n      itemStyle: {\n        shadowBlur: 10,\n        shadowOffsetX: 0,\n        shadowColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    }\n  }]\n};\nimport * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      count: {}\n    };\n  },\n  mounted() {\n    // 等页面dom元素加载完成再设置数据\n    // 折线图\n    let linetDom = document.getElementById('line');\n    let lineChart = echarts.init(linetDom);\n\n    // 饼图\n    let pieDom = document.getElementById('pie');\n    let pieChart = echarts.init(pieDom);\n    this.$request.get('/selectLine').then(res => {\n      lineOption.xAxis.data = res.data?.map(v => v.name) || [];\n      lineOption.series[0].data = res.data?.map(v => v.value) || [];\n      lineChart.setOption(lineOption);\n    });\n    this.$request.get('/selectPie').then(res => {\n      pieOption.series[0].data = res.data || [];\n      pieChart.setOption(pieOption);\n    });\n  },\n  created() {\n    this.$request.get('/count').then(res => {\n      this.count = res.data || {};\n    });\n  }\n};","map":{"version":3,"names":["lineOption","title","text","left","tooltip","trigger","legend","xAxis","type","data","yAxis","series","smooth","pieOption","subtext","orient","center","radius","label","show","formatter","param","name","percent","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","echarts","user","JSON","parse","localStorage","getItem","count","mounted","linetDom","document","getElementById","lineChart","init","pieDom","pieChart","$request","get","then","res","map","v","value","setOption","created"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"display: flex; grid-gap: 15px; margin-bottom: 15px\">\n      <div class=\"card item\">\n        <div style=\"flex: 1; text-align: center\">\n          <img src=\"@/assets/imgs/新闻.png\" alt=\"\" style=\"width: 60px; height: 60px\">\n        </div>\n        <div style=\"flex: 1; font-size: 20px\">\n          <div style=\"margin-bottom: 5px\">新闻总数</div>\n          <div style=\"font-weight: bold\">{{ count.newsCount }}</div>\n        </div>\n      </div>\n      <div class=\"card item\">\n        <div style=\"flex: 1; text-align: center\">\n          <img src=\"@/assets/imgs/问答.png\" alt=\"\" style=\"width: 60px; height: 60px\">\n        </div>\n        <div style=\"flex: 1; font-size: 20px\">\n          <div style=\"margin-bottom: 5px\">问题总数</div>\n          <div style=\"font-weight: bold\">{{ count.questionCount }}</div>\n        </div>\n      </div>\n      <div class=\"card item\">\n        <div style=\"flex: 1; text-align: center\">\n          <img src=\"@/assets/imgs/反馈.png\" alt=\"\" style=\"width: 60px; height: 60px\">\n        </div>\n        <div style=\"flex: 1; font-size: 20px\">\n          <div style=\"margin-bottom: 5px\">反馈总数</div>\n          <div style=\"font-weight: bold\">{{ count.feedbackCount }}</div>\n        </div>\n      </div>\n      <div class=\"card item\">\n        <div style=\"flex: 1; text-align: center\">\n          <img src=\"@/assets/imgs/用户.png\" alt=\"\" style=\"width: 60px; height: 60px\">\n        </div>\n        <div style=\"flex: 1; font-size: 20px\">\n          <div style=\"margin-bottom: 5px\">用户总数</div>\n          <div style=\"font-weight: bold\"> {{ count.userCount }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div style=\"display: flex; grid-gap: 15px\">\n      <div class=\"card\" id=\"line\" style=\"flex: 1; height: 500px\"></div>\n      <div class=\"card\" id=\"pie\" style=\"flex: 1; height: 500px\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst lineOption = {\n  title: {\n    text: '答题数量的趋势图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    left: 'left'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [],\n      type: 'line',\n      smooth: true\n    },\n  ]\n}\nconst pieOption = {\n  title: {\n    text: '订单销售统计',\n    subtext: '比例图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      type: 'pie',\n      center: ['50%', '60%'],\n      radius: '50%',\n      data: [],\n      label: {\n        show: true,\n        formatter(param) {\n          return param.name + ' (' + param.percent + '%)';\n        }\n      },\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n}\n\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      count: {}\n\n    }\n  },\n  mounted() {  // 等页面dom元素加载完成再设置数据\n    // 折线图\n    let linetDom = document.getElementById('line');\n    let lineChart = echarts.init(linetDom);\n\n    // 饼图\n    let pieDom = document.getElementById('pie');\n    let pieChart = echarts.init(pieDom);\n\n    this.$request.get('/selectLine').then(res => {\n      lineOption.xAxis.data = res.data?.map(v => v.name) || []\n      lineOption.series[0].data = res.data?.map(v => v.value) || []\n      lineChart.setOption(lineOption)\n    })\n\n    this.$request.get('/selectPie').then(res => {\n      pieOption.series[0].data = res.data || []\n      pieChart.setOption(pieOption)\n    })\n\n  },\n  created() {\n    this.$request.get('/count').then(res => {\n      this.count = res.data || {}\n    })\n  }\n}\n</script>\n\n<style scoped>\n.item {\n  flex: 1;\n  display: flex;\n  align-items: center;\n}\n</style>\n"],"mappings":"AAiDA,MAAAA,UAAA;EACAC,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAH,IAAA;EACA;EACAI,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;EACAC,KAAA;IACAF,IAAA;EACA;EACAG,MAAA,GACA;IACAF,IAAA;IACAD,IAAA;IACAI,MAAA;EACA;AAEA;AACA,MAAAC,SAAA;EACAZ,KAAA;IACAC,IAAA;IACAY,OAAA;IACAX,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAS,MAAA;IACAZ,IAAA;EACA;EACAQ,MAAA,GACA;IACAH,IAAA;IACAQ,MAAA;IACAC,MAAA;IACAR,IAAA;IACAS,KAAA;MACAC,IAAA;MACAC,UAAAC,KAAA;QACA,OAAAA,KAAA,CAAAC,IAAA,UAAAD,KAAA,CAAAE,OAAA;MACA;IACA;IACAC,QAAA;MACAC,SAAA;QACAC,UAAA;QACAC,aAAA;QACAC,WAAA;MACA;IACA;EACA;AAEA;AAEA,YAAAC,OAAA;AAEA;EACAP,IAAA;EACAb,KAAA;IACA;MACAqB,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;IAEA;EACA;EACAC,QAAA;IAAA;IACA;IACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,IAAAC,SAAA,GAAAX,OAAA,CAAAY,IAAA,CAAAJ,QAAA;;IAEA;IACA,IAAAK,MAAA,GAAAJ,QAAA,CAAAC,cAAA;IACA,IAAAI,QAAA,GAAAd,OAAA,CAAAY,IAAA,CAAAC,MAAA;IAEA,KAAAE,QAAA,CAAAC,GAAA,gBAAAC,IAAA,CAAAC,GAAA;MACA/C,UAAA,CAAAO,KAAA,CAAAE,IAAA,GAAAsC,GAAA,CAAAtC,IAAA,EAAAuC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA3B,IAAA;MACAtB,UAAA,CAAAW,MAAA,IAAAF,IAAA,GAAAsC,GAAA,CAAAtC,IAAA,EAAAuC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,KAAA;MACAV,SAAA,CAAAW,SAAA,CAAAnD,UAAA;IACA;IAEA,KAAA4C,QAAA,CAAAC,GAAA,eAAAC,IAAA,CAAAC,GAAA;MACAlC,SAAA,CAAAF,MAAA,IAAAF,IAAA,GAAAsC,GAAA,CAAAtC,IAAA;MACAkC,QAAA,CAAAQ,SAAA,CAAAtC,SAAA;IACA;EAEA;EACAuC,QAAA;IACA,KAAAR,QAAA,CAAAC,GAAA,WAAAC,IAAA,CAAAC,GAAA;MACA,KAAAZ,KAAA,GAAAY,GAAA,CAAAtC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}