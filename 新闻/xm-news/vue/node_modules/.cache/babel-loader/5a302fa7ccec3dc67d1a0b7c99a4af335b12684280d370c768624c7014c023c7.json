{"ast":null,"code":"export default {\n  title: \"Question\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    changeStatus(row, status) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.form.status = status;\n      this.$confirm('您确定' + status + '吗？', '确认审核', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.put('/question/update', this.form).then(res => {\n          if (res.code === '200') {\n            this.$message.success('审核成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(e => {});\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/question/update' : '/question/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/question/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["title","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","methods","changeStatus","row","status","stringify","$confirm","type","then","response","$request","put","res","code","$message","success","error","msg","catch","e","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Question.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入标题关键字查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"title\" label=\"标题\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"descr\" label=\"描述\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"img\" label=\"配图\">\r\n          <template v-slot=\"scope\">\r\n            <el-image v-if=\"scope.row.img\" style=\"width: 50px\" :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"userId\" label=\"发布人ID\"></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"发布人\"></el-table-column>\r\n        <el-table-column prop=\"date\" label=\"发布日期\"></el-table-column>\r\n        <el-table-column prop=\"readCount\" label=\"阅读量\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"审核状态\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag type=\"info\" v-if=\"scope.row.status === '待审核'\">待审核</el-tag>\r\n            <el-tag type=\"success\" v-if=\"scope.row.status === '通过'\">通过</el-tag>\r\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '拒绝'\">拒绝</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"审核\" width=\"150\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"success\" plain @click=\"changeStatus(scope.row, '通过')\">通过</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"changeStatus(scope.row, '拒绝')\">拒绝</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"100\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog title=\"问题信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"descr\">\r\n          <el-input v-model=\"form.descr\" placeholder=\"描述\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"配图\" prop=\"img\">\r\n          <el-input v-model=\"form.img\" placeholder=\"配图\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"发布人ID\" prop=\"userId\">\r\n          <el-input v-model=\"form.userId\" placeholder=\"发布人ID\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"发布日期\" prop=\"date\">\r\n          <el-input v-model=\"form.date\" placeholder=\"发布日期\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"阅读量\" prop=\"readCount\">\r\n          <el-input v-model=\"form.readCount\" placeholder=\"阅读量\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"审核状态\" prop=\"status\">\r\n          <el-input v-model=\"form.status\" placeholder=\"审核状态\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  title: \"Question\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      title: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    changeStatus(row, status) {\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.form.status = status\r\n      this.$confirm('您确定'+status+'吗？', '确认审核', {type: \"warning\"}).then(response => {\r\n        this.$request.put('/question/update', this.form).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('审核成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(e => {})\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/question/update' : '/question/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/question/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/question/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/question/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          title: this.title,\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    reset() {\r\n      this.title = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA8FA;EACAA,KAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,KAAA;MACAM,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA,GACA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,aAAAC,GAAA,EAAAC,MAAA;MACA,KAAAb,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAY,SAAA,CAAAF,GAAA;MACA,KAAAZ,IAAA,CAAAa,MAAA,GAAAA,MAAA;MACA,KAAAE,QAAA,SAAAF,MAAA;QAAAG,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAC,GAAA,0BAAApB,IAAA,EAAAiB,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,IAAA;UACA;YACA,KAAAc,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA,CAAAC,CAAA;IACA;IACAC,UAAA;MAAA;MACA,KAAA7B,IAAA;MACA,KAAAD,WAAA;IACA;IACA+B,WAAAlB,GAAA;MAAA;MACA,KAAAZ,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAY,SAAA,CAAAF,GAAA;MACA,KAAAb,WAAA;IACA;IACAgC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,QAAA;YACAiB,GAAA,OAAApC,IAAA,CAAAqC,EAAA;YACAC,MAAA,OAAAtC,IAAA,CAAAqC,EAAA;YACA3C,IAAA,OAAAM;UACA,GAAAiB,IAAA,CAAAI,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAf,IAAA;cACA,KAAAV,WAAA;YACA;cACA,KAAAwB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;IACAa,IAAAF,EAAA;MAAA;MACA,KAAAtB,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAqB,MAAA,uBAAAH,EAAA,EAAApB,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,IAAA;UACA;YACA,KAAAc,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA,QACA;IACA;IACAc,sBAAAC,IAAA;MAAA;MACA,KAAAnC,GAAA,GAAAmC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAP,EAAA;IACA;IACAQ,SAAA;MAAA;MACA,UAAAtC,GAAA,CAAAuC,MAAA;QACA,KAAAvB,QAAA,CAAAwB,OAAA;QACA;MACA;MACA,KAAAhC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAqB,MAAA;UAAA9C,IAAA,OAAAa;QAAA,GAAAU,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,IAAA;UACA;YACA,KAAAc,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA,QACA;IACA;IACAlB,KAAAb,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAuB,QAAA,CAAA6B,GAAA;QACAC,MAAA;UACArD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,KAAA,OAAAA;QACA;MACA,GAAAwB,IAAA,CAAAI,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAA3B,SAAA,GAAA0B,GAAA,CAAA3B,IAAA,EAAAwD,IAAA;UACA,KAAApD,KAAA,GAAAuB,GAAA,CAAA3B,IAAA,EAAAI,KAAA;QACA;UACA,KAAAyB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAyB,MAAA;MACA,KAAA1D,KAAA;MACA,KAAAgB,IAAA;IACA;IACA2C,oBAAAxD,OAAA;MACA,KAAAa,IAAA,CAAAb,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}