{"ast":null,"code":"export default {\n  name: \"Video\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 6,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    play(video) {\n      this.$request.put('/video/updateCount/' + video.id).then(res => {\n        this.load(1);\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/video/update' : '/video/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/video/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/video/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/video/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.file = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","methods","play","video","$request","put","id","then","res","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleFileSuccess","file","fileList"],"sources":["src/views/front/Video.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div style=\"margin-bottom: 20px\">\r\n      <el-input size=\"medium\" placeholder=\"请输入关键字查询\" style=\"width: 300px\" v-model=\"name\"></el-input>\r\n      <el-button size=\"medium\" type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button size=\"medium\" type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n\r\n      <el-row :gutter=\"10\">\r\n        <el-col :span=\"8\" v-for=\"item in tableData\" :key=\"item.id\" style=\"margin-bottom: 20px\">\r\n          <video @click=\"play(item)\" :src=\"item.file\" controls style=\"width: 100%; height: 200px\"></video>\r\n          <div style=\"margin: 10px 0; font-size: 16px\">{{ item.name }}</div>\r\n          <div style=\"margin: 10px 0; color: #666\">\r\n            <span style=\"margin-right: 20px\">发布时间：{{ item.time }}</span>\r\n            <span>播放量：{{ item.readCount }}</span>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n\r\n\r\n      <div style=\"margin: 10px 0\" v-if=\"total > pageSize\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Video\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 6,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    play(video) {\r\n      this.$request.put('/video/updateCount/' + video.id).then(res => {\r\n        this.load(1)\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/video/update' : '/video/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/video/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/video/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/video/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleFileSuccess(response, file, fileList) {\r\n      this.form.file = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}