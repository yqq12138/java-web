{"ast":null,"code":"import E from \"wangeditor\";\nexport default {\n  name: \"QuestionDetail\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      question: {},\n      answerList: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      form: {},\n      fromVisible: false,\n      editor: null,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.$request.put('/question/updateCount/' + this.id).then(() => {\n      this.load();\n    });\n    this.loadAnswer(1);\n  },\n  methods: {\n    addLikes(answerId) {\n      this.$request.post('/likes/add', {\n        fid: answerId,\n        module: 'answer'\n      }).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('操作成功');\n          this.loadAnswer(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.form.questionId = this.id;\n      this.form.content = this.editor.txt.html();\n      this.$request.post('/answer/add', this.form).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('保存成功');\n          this.loadAnswer(1);\n          this.fromVisible = false;\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n      this.setRichText('');\n    },\n    loadAnswer(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/answer/selectFrontPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          questionId: this.id\n        }\n      }).then(res => {\n        this.answerList = res.data?.list || [];\n        this.total = res.data?.total || 0;\n      });\n    },\n    load() {\n      this.$request.get('/question/selectById/' + this.id).then(res => {\n        this.question = res.data || {};\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAnswer(pageNum);\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.config.zIndex = 0;\n        this.editor.create(); // 创建\n        this.editor.txt.html(html);\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/answer/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.loadAnswer(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","id","$route","query","question","answerList","pageNum","pageSize","total","form","fromVisible","editor","user","JSON","parse","localStorage","getItem","created","$request","put","then","load","loadAnswer","methods","addLikes","answerId","post","fid","module","res","code","$message","success","error","msg","save","questionId","content","txt","html","handleAdd","setRichText","get","params","list","handleCurrentChange","$nextTick","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","zIndex","create","del","$confirm","response","delete","catch"],"sources":["src/views/front/QuestionDetail.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 50%; margin: 10px auto\">\r\n    <div class=\"card\" style=\"margin-bottom: 10px\">\r\n      <div style=\"font-size: 24px; margin-bottom: 20px\">{{ question.title }}</div>\r\n      <div style=\"margin-bottom: 20px; color: #444; font-size: 16px\">{{ question.descr }}</div>\r\n      <div style=\"display: flex\">\r\n        <div style=\"flex: 1; color: #888\">\r\n          <span style=\"margin-right: 20px\">发布日期：{{ question.date }}</span>\r\n          <span>阅读量：{{ question.readCount }}</span>\r\n        </div>\r\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">回答问题</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <div style=\"font-size: 24px; margin-bottom: 20px\">回答列表 {{ total }}</div>\r\n      <div>\r\n        <div v-for=\"item in answerList\" :key=\"item.id\" style=\"display: flex; grid-gap: 10px; padding-bottom: 20px; border-bottom: 1px solid #ddd; margin-bottom: 20px\">\r\n          <div style=\"color: #666; padding-top: 20px; width: 60px; cursor: pointer\">\r\n            <span @click=\"addLikes(item.id)\" :style=\"{ 'color' : item.likes ? 'red' : '#666' }\"><i style=\"font-size: 20px\" class=\"el-icon-like\"></i>{{ item.likesCount }}</span>\r\n          </div>\r\n          <div style=\"flex: 1;\">\r\n           <div style=\"display: flex; grid-gap: 10px; margin-bottom: 10px\">\r\n             <img :src=\"item.userAvatar\" alt=\"\" style=\"width: 50px; height: 50px; border-radius: 50%\">\r\n             <div style=\"color: #888;\">\r\n               <div style=\"margin-bottom: 10px\">{{ item.userName }}</div>\r\n               <div>{{ item.time }}</div>\r\n             </div>\r\n           </div>\r\n\r\n            <div class=\"w-e-text\">\r\n              <div v-html=\"item.content\"></div>\r\n            </div>\r\n\r\n            <div style=\"margin-top: 10px\" v-if=\"item.userId === user.id\">\r\n              <span @click=\"del(item.id)\" style=\"color: #666; cursor: pointer\"><i class=\"el-icon-delete\"></i>删除</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"margin: 15px 0\" v-if=\"total > pageSize\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n\r\n      <el-dialog title=\"回答内容\" :visible.sync=\"fromVisible\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" ref=\"formRef\">\r\n          <el-form-item label=\"内容\" prop=\"content\">\r\n            <div id=\"editor\"></div>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\"\r\n\r\nexport default {\r\n  name: \"QuestionDetail\",\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      question: {},\r\n      answerList: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      form: {},\r\n      fromVisible: false,\r\n      editor: null,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n    }\r\n  },\r\n  created() {\r\n    this.$request.put('/question/updateCount/' + this.id).then(() => {\r\n      this.load()\r\n    })\r\n\r\n    this.loadAnswer(1)\r\n  },\r\n  methods: {\r\n    addLikes(answerId) {\r\n      this.$request.post('/likes/add', { fid: answerId, module: 'answer' }).then(res => {\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('操作成功')\r\n          this.loadAnswer(1)\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.form.questionId = this.id\r\n      this.form.content = this.editor.txt.html()\r\n      this.$request.post('/answer/add', this.form).then(res => {\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('保存成功')\r\n          this.loadAnswer(1)\r\n          this.fromVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n      this.setRichText('')\r\n    },\r\n    loadAnswer(pageNum) {\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/answer/selectFrontPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          questionId: this.id\r\n        }\r\n      }).then(res => {\r\n        this.answerList = res.data?.list || []\r\n        this.total = res.data?.total || 0\r\n      })\r\n    },\r\n    load() {\r\n      this.$request.get('/question/selectById/' + this.id).then(res => {\r\n        this.question = res.data || {}\r\n      })\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.loadAnswer(pageNum)\r\n    },\r\n    setRichText(html) {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.config.zIndex = 0\r\n        this.editor.create()  // 创建\r\n        this.editor.txt.html(html)\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/answer/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.loadAnswer(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}